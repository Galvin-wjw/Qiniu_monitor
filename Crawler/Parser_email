#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from email.parser import Parser
from email.header import decode_header
from email.utils import parseaddr
import re
import poplib
import slackweb
import base64
import time


# 邮箱个人信息
email = ''
password = ''
# 邮件服务器地址。如果你的邮箱是163，那么可以这么写。qq的话就是pop.qq.com
pop3_server = 'pop.163.com'


def guess_charset(msg):
    charset = msg.get_charset()
    if charset is None:
        content_type = msg.get('Content-Type', '').lower()
        pos = content_type.find('charset=')
        if pos >= 0:
            charset = content_type[pos + 8:].strip()
    return charset

def decode_str(s):
    value, charset = decode_header(s)[0]
    if charset:
        value = value.decode(charset)
    return value

def get_mail_info(s):
    nickname, account  = s.split(' ')
    # 获取字串的编码信息
    charset = nickname.split('?')[1]
    # print('编码：{}'.format(charset))
    nickname = nickname.split('?')[3]
    nickname = str(base64.decodebytes(nickname.encode(encoding=charset)), encoding=charset)
    account = account.lstrip('<')
    account = account.rstrip('>')
    return nickname, account


def print_info(msg, indent=0):
    if indent == 0:
        for header in ['From', 'To', 'Subject']:
            value = msg.get(header, '')
            if value:
                if header=='Subject':
                    value = decode_str(value)
                else:
                    hdr, addr = parseaddr(value)
                    name = decode_str(hdr)
                    value = u'%s <%s>' % (name, addr)
            print('%s%s: %s' % ('  ' * indent, header, value))
    if (msg.is_multipart()):
        parts = msg.get_payload()
        for n, part in enumerate(parts):
            print_info(part, indent + 1)
    else:
        content_type = msg.get_content_type()
        if content_type=='text/plain' or content_type=='text/html':
            content = msg.get_payload(decode=True)
            charset = guess_charset(msg)
            if charset:
                content = content.decode(charset)
    return content


if __name__ == '__main__':


    slack = slackweb.Slack('')

    id = 7
    while True:
        try:
            # 连接到POP3服务器:
            server = poplib.POP3(pop3_server)
            # 可以打开或关闭调试信息:
            server.set_debuglevel(1)
            # 可选:打印POP3服务器的欢迎文字:
            #print(server.getwelcome().decode('utf-8'))
            # 身份认证:
            server.user(email)
            server.pass_(password)
            # stat()返回邮件数量和占用空间:
            #print('Messages: %s. Size: %s' % server.stat())
            # list()返回所有邮件的编号:
            resp, mails, octets = server.list()
            # 可以查看返回的列表类似[b'1 82923', b'2 2184', ...]
            #3print(mails)
            # 获取最新一封邮件, 注意索引号从1开始:
            index = len(mails)
            print('index',type(index))
            resp, lines, octets = server.retr(index)
            #print(resp,lines,octets)
            # lines存储了邮件的原始文本的每一行,
            # 可以获得整个邮件的原始文本:
            msg_content = b'\r\n'.join(lines).decode('utf-8')

            # 解析出邮件:
            msg = Parser().parsestr(msg_content)

            content= print_info(msg)
            content = content.encode('utf-8').decode('unicode_escape')
            print(content)


            # content_title = re.search(r'[标题].*?(?=<br>)', content).group()
            # content_url = re.search(r'[原文地址].*?(?=<br)', content).group()
            content_title = re.findall(r'[标题].*?(?=<br>)', content)
            content_url = re.findall(r'[原文地址].*?(?=<br)', content)

            #获取发件人信息
            fromstr = msg.get('From')
            #print(fromstr)
            from_nickname, from_account = get_mail_info(fromstr)
            print(from_account)

            server.quit()
            if((from_account == 'noreply@qbdsj.cn')&(index > id)):
                id = index
                for idx, title in enumerate(content_title):
                    slack.notify(username='【舆情监控】' +content_title[idx] , text=content_url[idx], mrkdwn=True)
            time.sleep(1200)
        except Exception as e:
            print(e)
